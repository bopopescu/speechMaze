$schema: "http://json-schema.org/draft-06/schema#"

title: dataproc v1beta2 WorkflowTemplate export schema
description: A gcloud export/import command YAML validation schema.
type: object
additionalProperties: false
properties:
  COMMENT:
    type: object
    description: User specified info ignored by gcloud import.
    additionalProperties: false
    properties:
      template-id:
        type: string
      region:
        type: string
      description:
        type: string
      date:
        type: string
      version:
        type: string
  UNKNOWN:
    type: array
    description: Unknown API fields that cannot be imported.
    items:
      type: string
  jobs:
    description: The Directed Acyclic Graph of Jobs to submit.
    type: array
    items:
      type: object
      required:
      - stepId
      additionalProperties: false
      properties:
        hadoopJob: {$ref: "HadoopJob.yaml"}
        hiveJob: {$ref: "HiveJob.yal"}
        labels:
          description: |-
            The labels to associate with this job.Label keys must be between 1
            and 63 characters long, and must conform to the following regular
            expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and
            63 characters long, and must conform to the following regular
          type: object
          additionalProperties:
            description: Additional properties of type string
            type: string
        pigJob: {$ref: "PigJob.yaml"}
        prerequisiteStepIds:
          description: |-
            The optional list of prerequisite job step_ids. If not specified,
            the job will start at the beginning of workflow.
          type: array
          items:
            type: string
        pysparkJob: {$ref: "PySparkJob.yaml"}
        scheduling: {$ref: "JobScheduling.yaml"}
        sparkJob: {$ref: "SparkJob.yaml"}
        sparkRJob: {$ref: "SparkRJob.yaml"}
        sparkSqlJob: {$ref: "SparkSqlJob.yaml"}
        stepId:
          description: |-
            The step id. The id must be unique among all jobs within the
            template.The step id is used as prefix for job id, as job
            goog- dataproc-workflow-step-id label, and in
            prerequisiteStepIds field from other steps.The id must contain
            only letters (a-z, A-Z), numbers (0-9), underscores (_), and
            hyphens (-). Cannot begin or end with underscore or hyphen.
            Must consist of between 3 and 50 characters.
          type: string
  labels:
    description: |-
      The labels to associate with this template. These labels will be
      propagated to all jobs and clusters created by the workflow
      instance.Label keys must contain 1 to 63 characters, and must conform
      to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be
      empty, but, if present, must contain 1 to 63 characters, and must
      conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more
      than 32 labels can be associated with a template.
    type: object
    additionalProperties:
      description: Additional properties of type string
      type: string
  parameters:
    description: |-
      Template parameters whose values are substituted into the template.
      Values for parameters must be provided when the template is
      instantiated.
    type: array
    items:
      type: object
      required:
      - fields
      - name
      additionalProperties: false
      properties:
        description:
          description: |-
            Brief description of the parameter. Must not exceed 1024
            characters.
          type: string
        fields:
          description: |-
            Paths to all fields that the parameter replaces. A field is
            allowed to appear in at most one parameter's list of field
            paths.A field path is similar in syntax to a
            google.protobuf.FieldMask. For example, a field path that
            references the zone field of a workflow template's cluster
            selector would be specified as
            <code>placement.clusterSelector.zone</code>.Also, field paths
            can reference fields using the following syntax: Values in
            maps can be referenced by key. Examples<br> labels'key'
            placement.clusterSelector.clusterLabels'key'
            placement.managedCluster.labels'key'
            placement.clusterSelector.clusterLabels'key' jobsstep-
            id.labels'key' Jobs in the jobs list can be referenced by
            step-id. Examples:<br> jobsstep-id.hadoopJob.mainJarFileUri
            jobsstep-id.hiveJob.queryFileUri jobsstep-
            id.pySparkJob.mainPythonFileUri jobsstep-
            id.hadoopJob.jarFileUris0 jobsstep-id.hadoopJob.archiveUris0
            jobsstep- id.hadoopJob.fileUris0 jobsstep-
            id.pySparkJob.pythonFileUris0 Items in repeated fields can be
            referenced by a zero-based index. Example:<br> jobsstep-
            id.sparkJob.args0 Other examples: jobsstep-
            id.hadoopJob.properties'key' jobsstep-id.hadoopJob.args0
            jobsstep- id.hiveJob.scriptVariables'key' jobsstep-
            id.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt
            may not be possible to parameterize maps and repeated fields
            in their entirety since only individual map values and
            individual items in repeated fields can be referenced. For
            example, the following field paths are invalid:
            placement.clusterSelector.clusterLabels jobsstep-
            id.sparkJob.args
          type: array
          items:
            type: string
        name:
          description: |-
            Parameter name. The parameter name is used as the key, and
            paired with the parameter value, which are passed to the
            template when the template is instantiated. The name must
            contain only capital letters (A-Z), numbers (0-9), and
            underscores (_), and must not start with a number. The
            maximum length is 40 characters.
          type: string
        validation:
          description: |-
            Validation rules to be applied to this parameter's value.
          type: object
          additionalProperties: false
          properties:
            regex:
              description: Validation based on regular expressions.
              type: object
              required:
              - regexes
              additionalProperties: false
              properties:
                regexes:
                  description: |-
                    RE2 regular expressions used to validate the
                    parameter's value. The value must match the regex
                    in its entirety (substring matches are not
                    sufficient).
                  type: array
                  items:
                    type: string
            values:
              description: |-
                Validation based on a list of allowed values.
              type: object
              required:
              - values
              additionalProperties: false
              properties:
                values:
                  description: |-
                    List of allowed values for the parameter.
                  type: array
                  items:
                    type: string
  placement: {$ref: "WorkflowTemplatePlacement.yaml"}
  version:
    description: |-
      Used to perform a consistent read-modify-write.This field should
      be left blank for a CreateWorkflowTemplate request. It is required
      for an UpdateWorkflowTemplate request, and must match the current
      server version. A typical update template flow would fetch the
      current template with a GetWorkflowTemplate request, which will
      return the current template with the version field filled in with
      the current server version. The user updates other fields in the
      template, then returns it as part of the UpdateWorkflowTemplate
      request.
    type: integer
